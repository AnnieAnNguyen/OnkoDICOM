[tool.poetry]
name = "onkodicom"
version = "0.1.0"
description = ""
authors = ["Ashley Maher <ashley.maher@didymodesigns.com.au>"]
license = "LGPL"

[poetry.virtualenvs]
create = true
in-project = true

[tool.poetry.dependencies]
python =  ">=3.8,<3.10" 
cython = { version = "*"}  # groups = ["user", "dev"]
numpy = { version = "*"}  # groups = ["user", "dev"]
platipy = { version = "*"}  # groups = ["user", "dev"]
alphashape = { version = "*"}  # groups = ["user", "dev"]
pandas = { version = "*"}  # groups = ["user", "dev"]
scikit-build = { version = "*"}  # groups = ["user", "dev"]
scipy = { version = "*"}  # groups = ["user", "dev"]
dicompyler-core = { version = "*"}  # groups = ["user", "dev"]
pydicom = { version = "*"}  # groups = ["user", "dev"]
country-list = { version = "*"}  # groups = ["user", "dev"]
scikit-image = { version = "*"}  # groups = ["user", "dev"]
fuzzywuzzy = { version = "*"}  # groups = ["user", "dev"]
PyWavelets = { version = "*"}  # groups = ["user", "dev"]
dataclasses = { version = "*", python = "~3.6" }  # groups = ["user", "dev"]
networkx = { version = "*"}  # groups = ["user", "dev"]
pymedphys =  { version = "*"}  # groups = ["user", "dev"]
pytest-qt = { version = "*"}  # groups = ["user", "dev"]
pytest = { version = "*"}  # groups = ["user", "dev"]
pyside6 = { version = "*"}  # groups = ["user", "dev"]
vtk = "*"  # groups = ["user", "dev"] 
shapely = { version = "*"}  # groups = ["user", "dev"]
python-Levenshtein = { version = "*"}  # groups = ["user", "dev"]
opencv-python = { version = "*"}  # groups = ["user", "dev"]
matplotlib = { version = "*"}  # groups = ["user", "dev"]
pyradiomics = { version = "*"}  # groups = ["user", "dev"]


[tool.poetry.dev-dependencies]
pylint = { version = "*", optional = false }  # groups = ["dev"]
pytest = { version = "*", optional = false }  # groups = ["dev"]
pytest-black = { version = "*", optional = false }  # groups = ["dev"]
pytest-cov = { version = "*", optional = false }  # groups = ["dev"]
pytest-pylint = { version = "*", optional = false }  # groups = ["dev"]
pytest-isort = { version = "*", optional = false }  # groups = ["dev"]
pytest-mypy = { version = "*", optional = false }  # groups = ["dev"]


[tool.poetry.extras]


#lots of pylint options available
[tool.pylint]




[tool.black]


[tool.pytest]  # general options go here
strict = true


[tool.pytest.reporting]  # and afterward we have sections analogous to the `--help` output
tb = 'long'
showlocals = true


[tool.coverage.run]
omit = ["test/*"]


[tool.coverage.report]
fail_under = 50


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

 
